# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iAbsW_amF4pLEqSB0oYG_jkJ6FClf8YN
"""

import numpy as np
import matplotlib.pyplot as plt

x = np.arange(0, 10, 0.1)
plt.plot(x)
plt.show()

import tensorflow as tf
tf.test.gpu_device_name()

# 教師あり学習、アヤメの分類！
# 品種3つ【正解ラベル1:Versicolor】【2:Virginica】【0:Setosa】
# petal(花弁)_Lengh/Width, sepal(がく)_Length/Width 4種の測定器

from sklearn import datasets
from sklearn import svm

# Irisの測定データの読み込み
iris = datasets.load_iris()

# print(iris.data)
# print(iris.data.shape)  # 形状

# num = len(iris.data)  # データの長さを調べる
# print(num)

clf = svm.SVC(gamma="auto")  # サポートベクターマシンというアルゴリズム
clf.fit(iris.data, iris.target)  # fit()で学習ができる。引数1:特微量X 引数2:ラベルデータY

print(clf.predict([[1.4, 1.8, 3.9, 0.5]]))  # 作ったモデル↑に関して予測をする

# 汎用的なコードの書き方

from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

# データを読み込む
iris = datasets.load_iris()
x, y = iris.data, iris.target

# トレーニングデータとテストデータに分ける
x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=1)

model = svm.SVC()

model.fit(x_train, y_train)

# 評価する
pred = model.predict(x_test)
print(accuracy_score(y_test, pred))

print(model.predict([[1.4, 3.5, 5.1, 0.2]]))
print(model.predict([[1.4, 3.5, 5.1, 0.2], [6.5, 2.6, 4.4, 1.4], [5.9, 3.0, 5.2, 1.5]]))